<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>maventest</groupId>
  <artifactId>mavenProject</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>mavenProject</name>
  <url>http://maven.apache.org</url>

  <properties>
    <!--
      Explicitly declaring the source encoding eliminates the following message: [WARNING] Using platform encoding
      (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
    -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>http://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>


  <dependencies>
    <dependency>
      <groupId>org.makumba</groupId>
      <artifactId>makumba</artifactId>
      <version>[0.8.2.7.2,)</version>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.7</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.11</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>mavenProject</finalName>
    <sourceDirectory>src/java</sourceDirectory>
    <outputDirectory>target/classes</outputDirectory>
    <plugins>
      <!-- Embedded Jetty (jetty:run-war) -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <!-- Delete this block to have Jetty run default port (8080) -->
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8080</port>
            </connector>
          </connectors>
          <!-- force friendly name instead of artifact name + version -->
          <contextPath>${project.build.finalName}</contextPath>
          <!-- This parameter will auto-deploy modified classes. -->
          <!-- You can save changes in a file or class and refresh your browser to view the changes. -->
          <scanIntervalSeconds>3</scanIntervalSeconds>
        </configuration>
      </plugin>

      <!-- Embedded Tomcat (package tomcat:run) -->
      <!-- Standalone Tomcat (package tomcat:deploy) -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <configuration>
          <path>/${project.build.finalName}</path>
          <!-- Embedded port -->
          <port>8080</port>
          <!--
            The default authentication credentials for remote deployment are username "admin" with no password To
            override credentials, define a server in settings.xml and activate it using the <server> element
          -->
          <url>http://localhost:8080/manager</url>
        </configuration>
      </plugin>
    </plugins>
  </build>

=======
<project>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <name>test</name>
    <artifactId>test</artifactId>
    <groupId>com.example</groupId>
    <version>1.0.0-SNAPSHOT</version>

    <description>An example Java 8 project using Maven and JUnit 5.x</description>

    <url>https://github.com/example/test</url>

    <licenses>
        <license>
            <name>MIT</name>
            <url>https://spdx.org/licenses/MIT.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>Example Organization</name>
        <url>http://example.com/</url>
    </organization>

    <scm>
        <url>https://github.com/example/test</url>
        <connection>git@github.com:example/test.git</connection>
        <developerConnection>git@github.com:example/test.git</developerConnection>
    </scm>

    <issueManagement>
        <system>Issues</system>
        <url>https://github.com/example/test/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Pipelines</system>
        <url>https://github.com/example/test/pipelines</url>
    </ciManagement>

    <contributors>
        <contributor>
            <name>Some Contributor</name>
            <email>some.contributor@example.com</email>
            <url>http://example.com/</url>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>scrum-master</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </contributor>
        <contributor>
            <name>Another Contributor</name>
            <email>another.contributor@example.com</email>
            <url>http://example.com/</url>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>product-owner</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </contributor>
    </contributors>

    <developers>
        <developer>
            <id>somedev</id>
            <email>some.developer@example.com</email>
            <name>Some Developer</name>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </developer>
        <developer>
            <id>otherdev</id>
            <email>other.developer@example.com</email>
            <name>Other Developer</name>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>com.example.test.HelloWorld</main.class>
        <java.version>8</java.version>
        <junit.jupiter.version>5.4.2</junit.jupiter.version>
        <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
        <maven.jar.plugin.version>3.1.1</maven.jar.plugin.version>
        <maven.surefire.plugin.version>2.22.1</maven.surefire.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
        </plugins>
    </build>
>>>>>>> c7d0623 (maven test)
</project>
